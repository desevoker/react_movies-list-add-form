{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","services/validation.ts","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","isValid","newValue","trim","errorMessage","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","htmlFor","type","classNames","event","target","onBlur","URL_PATTERN","isValidUrl","url","test","initialFormData","NewMovie","onAdd","count","setCount","formData","setFormData","isFilledCorrectly","handleFormDataChange","currentState","onSubmit","preventDefault","newMovie","currentCount","disabled","App","moviesFromServer","setMovies","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62294383.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (name: string, value: string) => void,\n  isValid?: (newValue: string) => boolean,\n  errorMessage?: string,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  isValid = (newValue) => !!newValue.trim(),\n  errorMessage = `${label} is required`,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setTouched] = useState(false);\n\n  const hasError = touched && required && !isValid(value);\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(name, event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{errorMessage}</p>\n      )}\n    </div>\n  );\n};\n","// eslint-disable-next-line max-len\nconst URL_PATTERN = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\nexport function isValidUrl(url: string): boolean {\n  return URL_PATTERN.test(url);\n}\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\nimport { isValidUrl } from '../../services/validation';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nconst initialFormData = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [formData, setFormData] = useState(initialFormData);\n\n  const isFilledCorrectly = !!formData.title.trim()\n                         && !!formData.imdbId.trim()\n                         && isValidUrl(formData.imgUrl)\n                         && isValidUrl(formData.imdbUrl);\n\n  const handleFormDataChange = (name: string, value: string) => {\n    setFormData((currentState) => ({\n      ...currentState,\n      [name]: value,\n    }));\n  };\n\n  const reset = () => {\n    setFormData(initialFormData);\n    setCount(currentCount => currentCount + 1);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!isFilledCorrectly) {\n      return;\n    }\n\n    const newMovie: Movie = { ...formData };\n\n    onAdd(newMovie);\n    reset();\n  };\n\n  return (\n    <form\n      key={count}\n      className=\"NewMovie\"\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={formData.title}\n        onChange={handleFormDataChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={formData.description}\n        onChange={handleFormDataChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={formData.imgUrl}\n        onChange={handleFormDataChange}\n        isValid={isValidUrl}\n        errorMessage=\"Image URL is not valid URL\"\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={formData.imdbUrl}\n        onChange={handleFormDataChange}\n        isValid={isValidUrl}\n        errorMessage=\"Imdb URL is not valid URL\"\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={formData.imdbId}\n        onChange={handleFormDataChange}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isFilledCorrectly}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { Movie } from './types/Movie';\nimport './App.scss';\n\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies(currentMovies => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}